{"version":3,"file":"../static/js/app.020c8bf2.js","mappings":"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","sources":["webpack://control_console/./src/server/api.js","webpack://control_console/./src/server/connection.js","webpack://control_console/./src/App.vue","webpack://control_console/./src/App.vue?7ccd","webpack://control_console/./src/views/streamView.vue","webpack://control_console/./src/views/streamView.vue?f173","webpack://control_console/./src/views/dataView.vue","webpack://control_console/./src/views/dataView.vue?e392","webpack://control_console/./src/views/logView.vue","webpack://control_console/./src/views/logView.vue?613b","webpack://control_console/./src/router/index.js","webpack://control_console/./src/store.js","webpack://control_console/./src/main.js","webpack://control_console/webpack/bootstrap","webpack://control_console/webpack/runtime/chunk loaded","webpack://control_console/webpack/runtime/define property getters","webpack://control_console/webpack/runtime/global","webpack://control_console/webpack/runtime/hasOwnProperty shorthand","webpack://control_console/webpack/runtime/make namespace object","webpack://control_console/webpack/runtime/publicPath","webpack://control_console/webpack/runtime/jsonp chunk loading","webpack://control_console/webpack/startup"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default () => {\r\n    return axios.create({\r\n        baseURL: \"https://sanchezalvarez.dev/api\"\r\n    })\r\n}","import Api from './api';\r\n\r\nexport default {\r\n\r\n\r\n    // POWER FUNCTIONS\r\n    fetchPower() {\r\n        return Api().get(\"/auv/power/fetch\");\r\n    },\r\n\r\n    togglePower() {\r\n        return Api().post(\"/auv/power/toggle\");\r\n    }\r\n};","<template>\n  <header>\n    <nav>\n      <router-link to=\"/\">Stream</router-link>\n      <router-link to=\"/data\">Data Monitoring</router-link>\n      <router-link to=\"/log\">Log</router-link>\n    </nav>\n    <button id=\"power_button\" @click = 'powerButton'>\n      <img id=\"power_svg\" src=\"@/assets/svg_icons/power-off.svg\" alt=\"Power OFF\">\n    </button>\n  </header>\n\n  <router-view ref=\"currentView\" @toggleDialog=\"toggleDialog\"></router-view>\n\n  <span id=\"example_chart_size\"></span>\n\n  <dialog id=\"dialog\">\n    <div id=\"dialog_content\">\n    </div>\n  </dialog>\n</template>\n\n\n\n<script setup>\n  import connection from \"@/server/connection\";\n  import power_on from '@/assets/svg_icons/power-on.svg';\n  import power_off from '@/assets/svg_icons/power-off.svg';\n  import {useStore} from \"vuex\";\n  import {onMounted, reactive, ref, watchEffect} from \"vue\";\n\n  const store = useStore();\n  const state = reactive(store.state);\n  const currentView = ref(null);\n  let data_demo;\n  const batteries = ref(state.batteries);\n  const watchAllow = ref(false);\n\n  const powerButton = async () => { //Make async when adding post requests\n    const power_svg = document.getElementById('power_svg');\n    try {\n      const fetch = await connection.togglePower()\n      const fetchPower = fetch.data.status;\n      if (fetchPower) {\n        power_svg.src =power_on;\n        power_svg.alt = 'Power ON';\n      } else {\n        power_svg.src = power_off;\n        power_svg.alt = 'Power OFF';\n        // stopDataDemo();\n      }\n      let power_status;\n      if(state.power === false) {\n        power_status = \"OFF\";\n      } else {\n        power_status = \"ON\";\n      }\n\n      if(fetchPower !== state.power) { store.commit(\"togglePower\") } else {store.commit('newNotification', {message: `AUV ${power_status}`, highlighted: true});}\n\n    } catch (error) {\n      store.commit(\"newNotification\", {message: \"AUV Power Failed\"});\n      store.commit('newLog', error);\n    }\n  }\n\n  const updatePowerButton = () => {\n    const power_svg = document.getElementById('power_svg');\n    let power_state = \"OFF\";\n    if(state.power === false) {\n      power_svg.src =power_on;\n      power_svg.alt = 'Power ON';\n      power_state = \"ON\";\n    } else {\n      power_svg.src = power_off;\n      power_svg.alt = 'Power OFF';\n    }\n    store.commit(\"newNotification\", {message: `Fetched Power: ${power_state}`, highlighted: true});\n  }\n\n  watchEffect(() => { //Later use server to determine when to allow watch\n    if(watchAllow.value) {\n      batteries.value.forEach((battery) => {\n        if(battery.voltage <= (50*.3)) {\n          store.commit('newNotification', {message: `Battery ${battery.id} Low`, severity: \"notification_alert\"});\n        }\n      });\n    }\n  });\n\n  setTimeout(() => {\n    watchAllow.value = true;\n  }, 5500)\n\n\n  // Later replace with the function to fetch data and call the chart updater\n  const startDataDemo = async () => {\n    data_demo = setInterval(function() {\n      store.state.batteries.forEach(function(battery) {\n\n        battery.voltage = parseFloat((Math.random() * 50).toFixed(2));\n        battery.amps = parseFloat((Math.random() * 30).toFixed(2));\n      });\n\n      store.state.motors.forEach(function (motor) {\n        motor.pwm = Math.floor(Math.random() * 100) + 1;\n      });\n\n      store.state.servos.forEach(function (servo) {\n        servo.pwm = Math.floor(Math.random() * 100) + 1;\n      });\n\n      store.commit('addChartData');\n    }, 5000);\n    console.log(\"Timeout Started\")\n\n     try {\n       const currentPower = await connection.fetchPower();\n       if(currentPower.data.status !== state.power) {\n         updatePowerButton();\n       }\n     } catch (error) {\n      console.log(error);\n     }\n  }\n\n  const  stopDataDemo = () => {\n    clearInterval(data_demo);\n    console.log(\"Timeout Stopped\")\n  }\n\n  function getDateTime () {\n    const currentDate = new Date();\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const time_period = currentDate.getHours() < 12 ? \"am\" : \"pm\";\n\n    const month = months[currentDate.getMonth()];\n    const day = currentDate.getDate();\n    const year = currentDate.getFullYear();\n    let hours = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n\n    if (hours > 12) { hours -= 12; }\n    if (hours === 0) { hours = 12; }\n    if (minutes < 10) { minutes = `0${minutes}`; }\n\n    return {\n      month: month,\n      day: day,\n      year: year,\n      hours: hours,\n      minutes: minutes,\n      time_period: time_period\n    };\n  }\n\n  const dialogOptions  = {\n    clearCharts: {\n      title: \"Clear Charts\",\n      message: \"Are you sure you want to clear the charts? All data related to the charts will be lost.\",\n      buttons: [\"Proceed\"], // Button titles should have corresponding function. Closing button is already included\n      button_functions: [store.commit.bind(store, 'clearChartData')],\n      textArea: false,\n      textAreaFunctionIndex: null,\n      textAreaMessage: null\n    },\n    saveCharts: {\n      title: \"Save Charts\",\n      message: \"Would you like to add any comments? Comments will appear at the top of the page.\",\n      buttons: [\"Proceed\"],\n      button_functions: [saveCharts],\n      textArea: true,\n      textAreaFunctionIndex: 0,\n      textAreaMessage: null\n    }\n  }\n\n  const dialog_active = ref(false);\n  function toggleDialog(dialog_request) {\n    const dialog = document.getElementById('dialog');\n    const dialog_content = document.getElementById('dialog_content');\n    let dialog_content_object;\n    if(!dialog_active.value) {\n      switch (dialog_request) {\n        case 'clear_charts':\n          dialog_content_object = dialogOptions.clearCharts;\n          break;\n        case 'save_charts':\n          dialog_content_object = dialogOptions.saveCharts;\n          break;\n        default:\n          break;\n      }\n\n      if(dialog_content_object) {\n        const dialog_title = document.createElement('h1');              dialog_title.innerText = dialog_content_object.title;\n        const dialog_message = document.createElement('p');    dialog_message.innerText = dialog_content_object.message\n        let dialog_text_area;\n        if(dialog_content_object.textArea) {\n          dialog_text_area = document.createElement('textarea'); dialog_text_area.id = 'dialog_text_area';\n        }\n        const dialog_buttons = document.createElement('div');               dialog_buttons.classList.add('dialog_buttons');\n        let closingButton = document.createElement('button');\n        closingButton.innerText = \"Cancel\";     closingButton.onclick = toggleDialog;\n        dialog_buttons.appendChild(closingButton);\n        for(let i = 0; i < dialog_content_object.buttons.length; i++) {\n          let newButton = document.createElement('button');\n          newButton.innerText = dialog_content_object.buttons[i];\n          newButton.onclick = () => dialogFunctions(dialog_content_object.button_functions[i]);\n          dialog_buttons.appendChild(newButton);\n        }\n        dialog_buttons.id = \"dialog_buttons\";\n        dialog_content.appendChild(dialog_title);\n        dialog_content.appendChild(dialog_message);\n        if(dialog_content_object.textArea) { dialog_content.appendChild(dialog_text_area); }\n        dialog_content.appendChild(dialog_buttons);\n      }\n\n      dialog.style.display = 'flex';\n      dialog_active.value = true;\n    } else {\n      dialog.style.display = 'none';\n      dialog_active.value =false;\n      dialog_content.innerHTML = \"\";\n    }\n  }\n\n  function dialogFunctions(newFunction) {\n    newFunction();\n    toggleDialog();\n  }\n\n  function saveCharts() {\n    // Check if user left a comment when saving charts\n    let userChartComment = \"\";\n    if(dialogOptions.saveCharts.textArea) {\n      if(document.getElementById('dialog_text_area').value) {\n        userChartComment = \"Comments: \" + document.getElementById('dialog_text_area').value;\n      }\n    }\n\n\n    let chartsHTML = \"\";\n    let chartDivs = document.querySelectorAll('.chart_container');\n    chartDivs.forEach((div) => {\n      chartsHTML += div.outerHTML;\n    })\n\n    let logHTML = \"<hr><div style='padding: 0 2rem'> <h2>Log</h2>\" +\n        \"\";\n    state.log.forEach((log) => {\n      if(log.highlighted === true) {\n        let pText = \"<p style='background-color: #343434; font-size: 1.5rem'>\" + log.message + \" <span style='color: #E2A300; font-size: 2rem'>&bull;</span></p>\"\n        logHTML += pText;\n      } else {\n        let pText = \"<p style='font-size: 1.5rem'>\" + log.message + \"</p>\"\n        logHTML += pText;\n      }\n    })\n    logHTML += \" </div>\";\n\n    const date = getDateTime();\n\n    let htmlContent = `<!DOCTYPE html><html lang=\"en\">\n        <head>\n            <title>KSU AUV Recorded Data</title>\n            <header style=\"width: 100vw; color: white; text-align: center\">\n                <h1>AUV Data saved at ${date.month} ${date.day}, ${date.year} at ${date.hours}:${date.minutes}${date.time_period}</h1>\n                <p style=\"font-size: 1.25rem\">${userChartComment}</p>\n            </header>\n        </head>\n        <body style=\"background-color: #121212; color: #D1D1D1\">\n            <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; justify-content: center;\">`;\n    htmlContent += chartsHTML;\n    htmlContent += `</div><div>`\n    htmlContent += logHTML;\n    htmlContent += '</div></body></html>';\n\n    let htmlBlob = new Blob([htmlContent], {type: 'text/html'});\n    const download_link = document.createElement('a');\n    download_link.href = URL.createObjectURL(htmlBlob);\n    download_link.download = `${date.year} ${date.month} ${date.day}, ${date.hours}_${date.minutes}_${date.time_period} AUV Data Charts.html`;\n    download_link.click();\n\n    toggleDialog();\n    toggleDialog();\n  }\n\nonMounted(() => {\n  startDataDemo()\n})\n</script>\n\n<style>\nheader {\n  background-image: url(\"@/assets/banner.png\");\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=98f33858&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <main class=\"active\" id=\"stream_main\">\r\n    <div id=\"stream\">\r\n      <div class=\"video_stream\">\r\n        <div class=\"stream_header\">\r\n          <h2 class=\"camera_title\">Regular View</h2>\r\n        </div>\r\n        <hr>\r\n        <div class=\"stream_container\">\r\n          <img id=\"camera_feed_1\" src=\"@/assets/svg_icons/disconnected.svg\" alt=\"Regular Stream\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"data_container\" id=\"battery_data\">\r\n        <div v-for=\"(battery, index) in batteries\" :key=\"battery.id\" :id=\"'battery_' + (index + 1)\" class=\"battery\" :style=\"{ borderColor: batteryBorderColor(battery) }\">\r\n          <h2>Battery {{battery.id}}</h2>\r\n          <p>Voltage: <span class=\"voltage\">{{ battery.voltage }}V</span></p>\r\n          <p>Amps: <span class=\"amps\">{{ battery.amps }}A</span></p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"video_stream\">\r\n        <div class=\"stream_header\">\r\n          <h2 class=\"camera_title\">Depth Sensor</h2>\r\n        </div>\r\n        <hr>\r\n        <div class=\"stream_container\">\r\n          <img id=\"camera_feed_2\" src=\"@/assets/depth_ex.jpg\" alt=\"Depth Sensor\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"notification_center\">\r\n      <p v-for=\"(notification, index) in notifications\" :key=\"index\" :class=\"notification.severity\">{{ notification.message }}</p>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref, watch, watchEffect} from \"vue\";\r\n  import {useStore} from \"vuex\";\r\n  const store = useStore();\r\n\r\n  const state = reactive(store.state);\r\n  const batteries = ref(state.batteries);\r\n  const notifications = ref(state.notifications);\r\n\r\nconst batteryBorderColor = (battery) => {\r\n  if(battery.voltage > (50*.8)) { // Estimate Battery %. Given that max voltage is 50V\r\n    return \"Green\";\r\n  } else if(battery.voltage > (50*.3)) {\r\n    return \"Darkgoldenrod\";\r\n  } else if(battery.voltage > 0) {\r\n    return \"Red\";\r\n  } else {\r\n    return \"White\";\r\n  }\r\n};\r\n</script>","import script from \"./streamView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./streamView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <main id=\"data_main\">\r\n    <section>\r\n      <h1>Data Monitoring</h1>\r\n      <div id=\"data_monitoring\">\r\n        <!--            4 batteries(voltage:float | amps: int)  |  8 Motors(pwm: int)  |  3 Servos(pwm: int)     -->\r\n        <div class=\"data_container\" id=\"battery_data_2\">\r\n          <div v-for=\"(battery, index) in batteries\" :key=\"battery.id\" :id=\"'battery_' + (index + 1)\" class=\"battery\" :style=\"{ borderColor: batteryBorderColor(battery) }\">\r\n            <h2>Battery</h2>\r\n            <p>Voltage: <span class=\"voltage\">{{ battery.voltage }}V</span></p>\r\n            <p>Amps: <span class=\"amps\">{{ battery.amps }}A</span></p>\r\n          </div>\r\n        </div>\r\n\r\n<!--      ----------------------------------------  MOTORS ------------------------------------------>\r\n        <div class=\"data_container\" id=\"motor_data\">\r\n          <div v-for=\"(motors, index) in motors\" :key=\"motors.id\" :id=\"'motor_' + (index + 1)\" class=\"motor\">\r\n            <h2>Motor 1</h2>\r\n            <p>pwm: {{motors.pwm}}%</p>\r\n          </div>\r\n        </div>\r\n\r\n<!--      -------------------------------------------  SERVOS  --------------------------------------------->\r\n        <div class=\"data_container\" id=\"servo_data\">\r\n          <div v-for=\"(servos, index) in servos\" :key=\"servos.id\" :id=\"'servo_' + (index + 1)\" class=\"servo\">\r\n            <h2>Servo 1</h2>\r\n            <p>pwm: {{servos.pwm}}%</p>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section>\r\n      <h1>Data Charts</h1>\r\n      <div id=\"chart_controls\">\r\n        <button @click=\"handleClear\">Clear Charts</button>\r\n        <button @click=\"handleSave\">Save Charts</button>\r\n      </div>\r\n      <div id=\"data_charts\">\r\n        <div class=\"chart_container\">\r\n          <div id=\"battery_voltage\"></div>\r\n        </div>\r\n\r\n        <div class=\"chart_container\">\r\n          <div id=\"battery_amp\"></div>\r\n        </div>\r\n\r\n        <div class=\"chart_container\">\r\n          <div id=\"motor_pwm\"></div>\r\n        </div>\r\n\r\n        <div class=\"chart_container\">\r\n          <div id=\"servo_pwm\"></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\n  import {useStore} from \"vuex\";\r\n  import {onMounted, reactive, ref} from \"vue\";\r\n  const store = useStore();\r\n  const emits = defineEmits(['toggleDialog']);\r\n\r\n  const state = reactive(store.state);\r\n  const batteries = ref(state.batteries);\r\n  const motors = ref(state.motors);\r\n  const servos = ref(state.servos);\r\n  const batteryVChart = ref(state.charts.battery_voltage_chart)\r\n  const batteryAChart = ref(state.charts.battery_amp_chart);\r\n  const motorChart = ref(state.charts.motor_chart);\r\n  const servoChart = ref(state.charts.servo_chart);\r\n\r\n\r\n  const batteryBorderColor = (battery) => {\r\n    if(battery.voltage > (50*.8)) { // Estimate Battery %. Given that max voltage is 50V\r\n      return \"Green\";\r\n    } else if(battery.voltage > (50*.3)) {\r\n      return \"Darkgoldenrod\";\r\n    } else if(battery.voltage > 0) {\r\n      return \"Red\";\r\n      // createNotification(`Battery ${battery_object.id} Low`, 1);\r\n    } else {\r\n      return \"White\";\r\n    }\r\n  };\r\n\r\n  const chart_colors = {\r\n    0: {color: '#0000FF'},\r\n    1: {color: '#FF0000'},\r\n    2: {color: '#FFFF00'},\r\n    3: {color: '#008000'},\r\n    4: {color: '#FF00FF'},\r\n    5: {color: '#00FFFF'},\r\n    6: {color: '#FFA500'},\r\n    7: {color: '#800080'}\r\n  }\r\n\r\n  function initCharts() {\r\n    drawCharts([batteryVChart.value, batteryAChart.value, motorChart.value, servoChart.value]);\r\n    chartSelections([batteryVChart.value, batteryAChart.value, motorChart.value, servoChart.value]);\r\n  }\r\n\r\n  function drawCharts(charts) {\r\n    const computedSize = window.getComputedStyle(document.getElementById('example_chart_size'));\r\n    charts.forEach((chart) => {\r\n      if(chart.chartData === null) {\r\n        chart.chartData = new google.visualization.DataTable();\r\n        for (let i = 0; i <= chart.column_count; i++) { //Add first row to create title and subject names\r\n          if(i === 0) { chart.chartData.addColumn('number', chart.y_title) } else { chart.chartData.addColumn('number', chart.subject + i); }\r\n        }\r\n      }\r\n      chart.chartOptions = {\r\n        backgroundColor: \"#343434\",\r\n        title: chart.title,\r\n        titleTextStyle: {color: \"white\"},\r\n        legend: {textStyle: {color: \"#FFFFFF\"}, position: 'in'},\r\n        hAxis: {title: chart.x_title,titleTextStyle: {color: \"white\"}, textStyle: {color: \"white\"}, baselineColor: \"white\", gridLines: {color: \"#FFFFFF\"}},\r\n        vAxis: {title: chart.y_title, titleTextStyle: {color: \"white\"}, textStyle: {color: \"white\"}, minValue: 0, maxValue: (chart.y_max+10)},\r\n        width: parseInt(computedSize.getPropertyValue('width')),\r\n        height: parseInt(computedSize.getPropertyValue('height')),\r\n        chartArea: {width: '70%', height: '85%', left: 70, right: 25},\r\n        explorer: {\r\n          actions: ['dragToZoom', 'rightClickToReset'],\r\n          axis: 'horizontal',\r\n          keepInBounds: true,\r\n          maxZoomIn: 10\r\n        },\r\n        series: chart_colors\r\n      }\r\n\r\n      chart.chart = new google.visualization.AreaChart(document.getElementById(chart.container_id));\r\n      chart.chart.draw(chart.chartData, chart.chartOptions);\r\n    })\r\n  }\r\n\r\n  function chartSelections(charts) {\r\n    charts.forEach((chart) => {\r\n      google.visualization.events.addListener(chart.chart, 'click', function () {\r\n        let series = JSON.parse(JSON.stringify(chart_colors));\r\n        setTimeout(() => {\r\n          let selectedItem = chart.chart.getSelection();\r\n          if(!selectedItem) {\r\n            chart.chartOptions.series = series;\r\n            chart.chart.draw(chart.chartData, chart.chartOptions);\r\n            return;\r\n          }\r\n          if(!chart.selectionBool) {\r\n            if (selectedItem.length > 0) {\r\n              let columnIndex = selectedItem[0].column - 1;\r\n              if (columnIndex != null) {\r\n                for (let i = 0; i < chart.chartData.getNumberOfColumns(); i++) {\r\n                  if (i !== columnIndex) {\r\n                    series[i] = {color: 'transparent'};\r\n                  }\r\n                }\r\n                chart.chartOptions.series = series;\r\n                chart.chart.draw(chart.chartData, chart.chartOptions);\r\n              }\r\n              chart.selectionBool = true;\r\n            }\r\n          } else {\r\n            chart.chartOptions.series = series;\r\n            chart.chart.draw(chart.chartData, chart.chartOptions);\r\n            chart.selectionBool = false;\r\n          }\r\n        }, 40)\r\n      });\r\n    })\r\n  }\r\n\r\n  function updateCharts(charts) {\r\n    charts.forEach((chart) => {\r\n      let newInsert = [timeActive];\r\n      chart.unit_reference.forEach(function(unit) {\r\n        newInsert.push(unit[chart.reference_unit]);\r\n      });\r\n      chart.chartData.addRow(newInsert);\r\n      chart.chart.draw(chart.chartData, chart.chartOptions);\r\n    })\r\n  }\r\n\r\n  function handleClear() {\r\n    emits('toggleDialog', 'clear_charts');\r\n  }\r\n\r\n  function handleSave() {\r\n    emits('toggleDialog', 'save_charts')\r\n  }\r\n\r\n  onMounted(() => {\r\n    // //Google Chart API\r\n    google.charts.load('current', {'packages':['corechart']});\r\n    google.charts.setOnLoadCallback(initCharts); //Call main chart initializer\r\n  })\r\n</script>\r\n","import script from \"./dataView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./dataView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <main id=\"log_main\">\r\n    <button id=\"log_scroll_control\" onclick=\"control_scroll()\">\r\n      <img src=\"@/assets/svg_icons/scroll_pause.svg\" alt=\"Scroll Control\">\r\n    </button>\r\n\r\n    <p v-for=\"(log) in logs\" :key=\"logs.indexOf(log)\" :id=\"'log_' + logs.indexOf(log)\" class=\"log_message\" :class=\"{ 'marked': log.highlighted }\" @click=\"highlight_message('log_' + logs.indexOf(log))\">\r\n      {{log.message}}\r\n      <span class=\"highlight_indicator\">•</span>\r\n    </p>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\n  import {useStore} from \"vuex\";\r\n  import {reactive, ref} from \"vue\";\r\n\r\n  const store = useStore();\r\n  const state = reactive(store.state);\r\n  const logs = ref(state.log);\r\n\r\n\r\n  const highlight_message = (message_container) => {\r\n    const container = document.getElementById(message_container);\r\n    if(container.classList.contains('marked')) {\r\n      container.classList.remove('marked');\r\n    } else {\r\n      container.classList.add('marked');\r\n    }\r\n    const logIndex = message_container.substring(4);\r\n    logs.value[logIndex].highlighted = logs.value[logIndex].highlighted !== true;\r\n  }\r\n\r\n</script>","import script from \"./logView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./logView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport streamView from '@/views/streamView.vue';\nimport dataView from \"@/views/dataView.vue\";\nimport logView from \"@/views/logView.vue\";\n\nconst routes = [\n  {\n    path: '/',\n    name: 'AUV Stream',\n    component: streamView\n  },\n  {\n    path: '/data',\n    name: 'AUV Data',\n    component: dataView\n  },\n  {\n    path: '/log',\n    name: 'AUV Log',\n    component: logView\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","// //Google Chart API\r\ngoogle.charts.load('current', {'packages':['corechart']});\r\n\r\n\r\nimport {createStore} from \"vuex\";\r\n\r\nfunction getDateTime () {\r\n    const currentDate = new Date();\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const time_period = currentDate.getHours() < 12 ? \"am\" : \"pm\";\r\n\r\n    const month = months[currentDate.getMonth()];\r\n    const day = currentDate.getDate();\r\n    const year = currentDate.getFullYear();\r\n    let hours = currentDate.getHours();\r\n    let minutes = currentDate.getMinutes();\r\n\r\n    if (hours > 12) { hours -= 12; }\r\n    if (hours === 0) { hours = 12; }\r\n    if (minutes < 10) { minutes = `0${minutes}`; }\r\n\r\n    return {\r\n        month: month,\r\n        day: day,\r\n        year: year,\r\n        hours: hours,\r\n        minutes: minutes,\r\n        time_period: time_period\r\n    };\r\n}\r\n\r\nconst store = createStore({\r\n    state: {\r\n        power: false,\r\n\r\n        batteries : [\r\n            { id: 1, voltage: 0, amps: 0 },\r\n            { id: 2, voltage: 0, amps: 0 },\r\n            { id: 3, voltage: 0, amps: 0 },\r\n            { id: 4, voltage: 0, amps: 0 }\r\n        ],\r\n\r\n        motors : [\r\n            { id: 1, pwm: 0 },\r\n            { id: 2, pwm: 0 },\r\n            { id: 3, pwm: 0 },\r\n            { id: 4, pwm: 0 },\r\n            { id: 5, pwm: 0 },\r\n            { id: 6, pwm: 0 },\r\n            { id: 7, pwm: 0 },\r\n            { id: 8, pwm: 0 }\r\n        ],\r\n\r\n        servos : [\r\n            { id: 1, pwm: 0 },\r\n            { id: 2, pwm: 0 },\r\n        ],\r\n\r\n        chartIteration: 1,\r\n        charts: {\r\n            battery_voltage_chart : {\r\n                chart: null,\r\n                chartData: null,\r\n                chartOptions: null,\r\n                subject: \"Battery\",\r\n                column_count: 4,\r\n                title: \"Battery Voltage\",\r\n                x_title: \"Per Fetch Iteration\",\r\n                y_title: \"Voltage\",\r\n                y_max: 50,\r\n                container_id: 'battery_voltage',\r\n                unit_reference: 0,\r\n                reference_unit: 'voltage',\r\n                selection_bool: false\r\n            },\r\n\r\n            battery_amp_chart : {\r\n                chart: null,\r\n                chartData: null,\r\n                chartOptions: null,\r\n                subject: \"Battery\",\r\n                column_count: 4,\r\n                title: \"Battery Amps\",\r\n                x_title: \"Per Fetch Iteration\",\r\n                y_title: \"Amps\",\r\n                y_max: 30,\r\n                container_id: 'battery_amp',\r\n                unit_reference: 0,\r\n                reference_unit: 'amps',\r\n                selection_bool: false\r\n            },\r\n\r\n            motor_chart : {\r\n                chart: null,\r\n                chartData: null,\r\n                chartOptions: null,\r\n                subject: \"Motor\",\r\n                column_count: 8,\r\n                title: \"Motor PWM\",\r\n                x_title: \"Per Fetch Iteration\",\r\n                y_title: \"PWM\",\r\n                y_max: 100,\r\n                container_id: 'motor_pwm',\r\n                unit_reference: 0,\r\n                reference_unit: 'pwm',\r\n                selection_bool: false\r\n            },\r\n\r\n            servo_chart : {\r\n                chart: null,\r\n                chartData: null,\r\n                chartOptions: null,\r\n                subject: 'Servo',\r\n                column_count: 2,\r\n                title: \"Servo PWM\",\r\n                x_title: \"Per Fetch Iteration\",\r\n                y_title: \"PWM\",\r\n                y_max: 100,\r\n                container_id: 'servo_pwm',\r\n                unit_reference: 0,\r\n                reference_unit: 'pwm',\r\n                selection_bool: false\r\n            }\r\n        },\r\n\r\n        notifications: [],\r\n        log: []\r\n    },\r\n    mutations: {\r\n        togglePower(state) {\r\n            state.power = !state.power;\r\n            const powerState = state.power ? \"ON\" : \"OFF\";\r\n            state.notifications.push({ message: `AUV ${powerState}`, severity: null });\r\n\r\n            const date = getDateTime();\r\n            const log_dateTime = `${date.month} ${date.day}, ${date.hours}:${date.minutes}${date.time_period}`;\r\n            const complete_message = `${log_dateTime} | AUV ${powerState}`;\r\n            state.log.push({message: complete_message,  highlighted: true});\r\n            setTimeout(() => {\r\n                if (state.notifications.length > 0) {\r\n                    state.notifications.shift();\r\n                }\r\n            }, 10000);\r\n        },\r\n\r\n        newNotification(state, {message, severity, highlighted}) {\r\n            state.notifications.push({ message, severity });\r\n\r\n            const date = getDateTime();\r\n            const log_dateTime = `${date.month} ${date.day}, ${date.hours}:${date.minutes}${date.time_period}`;\r\n            const complete_message = `${log_dateTime} | ${message}`;\r\n\r\n            if(highlighted) {\r\n                state.log.push({message: complete_message, highlighted: highlighted});\r\n            } else {\r\n                state.log.push({message: complete_message, highlighted: false});\r\n            }\r\n\r\n            setTimeout(() => {\r\n                if (state.notifications.length > 0) {\r\n                    state.notifications.shift();\r\n                }\r\n            }, 10000);\r\n        },\r\n\r\n        addChartData(state) {\r\n            // Ensure that chart.chartData is not null\r\n            const chartArray = [state.charts.battery_voltage_chart, state.charts.battery_amp_chart, state.charts.motor_chart, state.charts.servo_chart]\r\n            chartArray.forEach((chart) => {\r\n                if(chart.chartData === null) {\r\n                    chart.chartData = new google.visualization.DataTable();\r\n                    for (let i = 0; i <= chart.column_count; i++) { //Add first row to create title and subject names\r\n                        if(i === 0) { chart.chartData.addColumn('number', chart.y_title) } else { chart.chartData.addColumn('number', chart.subject + i); }\r\n                    }\r\n                }\r\n            })\r\n\r\n            // Get current data from objects and add it to their respective chart data\r\n            // Battery Voltages & Amps\r\n            const batteryVoltages = [state.chartIteration];\r\n            const batteryAmps = [state.chartIteration];\r\n            const motorPWM = [state.chartIteration];\r\n            const servoPWM = [state.chartIteration];\r\n            state.chartIteration++;\r\n\r\n            state.batteries.forEach((battery) => {\r\n                batteryVoltages.push(battery.voltage);\r\n                batteryAmps.push(battery.amps);\r\n            })\r\n            state.charts.battery_voltage_chart.chartData.addRow(batteryVoltages);\r\n            state.charts.battery_amp_chart.chartData.addRow(batteryAmps);\r\n\r\n            //  Motor PWM\r\n            state.motors.forEach(motor => {\r\n                motorPWM.push(motor.pwm);\r\n            })\r\n            state.charts.motor_chart.chartData.addRow(motorPWM);\r\n\r\n            //  Servo PWM\r\n            state.servos.forEach((servo) => {\r\n                servoPWM.push(servo.pwm);\r\n            })\r\n            state.charts.servo_chart.chartData.addRow(servoPWM);\r\n\r\n            if(state.charts.battery_voltage_chart.chart !== null) {\r\n                state.charts.battery_voltage_chart.chart.draw(state.charts.battery_voltage_chart.chartData, state.charts.battery_voltage_chart.chartOptions);\r\n                state.charts.battery_amp_chart.chart.draw(state.charts.battery_amp_chart.chartData, state.charts.battery_amp_chart.chartOptions);\r\n                state.charts.motor_chart.chart.draw(state.charts.motor_chart.chartData, state.charts.motor_chart.chartOptions);\r\n                state.charts.servo_chart.chart.draw(state.charts.servo_chart.chartData, state.charts.servo_chart.chartOptions);\r\n            }\r\n        },\r\n\r\n        clearChartData(state) {\r\n            const batteryVoltageChart = state.charts.battery_voltage_chart;\r\n            const batteryAmpsChart = state.charts.battery_amp_chart;\r\n            const motorChart = state.charts.motor_chart;\r\n            const servoChart = state.charts.servo_chart;\r\n            const charts = [batteryVoltageChart, batteryAmpsChart, motorChart, servoChart]\r\n\r\n            batteryVoltageChart.chartData = null;\r\n            batteryAmpsChart.chartData = null;\r\n            motorChart.chartData = null;\r\n            servoChart.chartData = null;\r\n\r\n            charts.forEach((chart) => {\r\n                chart.chartData = new google.visualization.DataTable();\r\n                for (let i = 0; i <= chart.column_count; i++) { //Add first row to create title and subject names\r\n                    if(i === 0) { chart.chartData.addColumn('number', chart.y_title) } else { chart.chartData.addColumn('number', chart.subject + i); }\r\n                }\r\n                chart.chart.draw(chart.chartData, chart.chartOptions);\r\n            })\r\n        },\r\n\r\n        newLog(state, message) {\r\n            const date = getDateTime;\r\n            const log_dateTime = `${date.month} ${date.day}, ${date.hours}:${date.minutes}${date.time_period}`;\r\n            const complete_message = `${log_dateTime} | ${message}`;\r\n\r\n            state.log.push({\r\n                message: complete_message,\r\n                highlighted: false\r\n            });\r\n        }\r\n    },\r\n\r\n    actions: {\r\n\r\n    }\r\n\r\n    // mutations: {\r\n    //     setBatteries(state, batteries) {\r\n    //         state.batteries = batteries; // Update the batteries array with the fetched data\r\n    //     }\r\n    // },\r\n    // actions: {\r\n    //     async fetchBatteries({ commit }) {\r\n    //         try {\r\n    //             const response = await axios.get('https://example.com/api/batteries'); // Replace with your API endpoint\r\n    //             const batteries = response.data; // Extract the batteries data from the response\r\n    //             commit('setBatteries', batteries); // Commit a mutation to update the state with the fetched data\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching batteries:', error);\r\n    //         }\r\n    //     }\r\n    // },\r\n})\r\n\r\nexport default store;","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store';\r\n\r\nimport '@/assets/style.css';\r\n\r\n\r\ncreateApp(App).use(router).use(store).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcontrol_console\"] = self[\"webpackChunkcontrol_console\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(942); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["axios","create","baseURL","fetchPower","get","togglePower","post","store","state","currentView","data_demo","batteries","watchAllow","powerButton","async","power_svg","document","getElementById","fetch","connection","data","status","power_status","src","alt","power","commit","message","highlighted","error","updatePowerButton","power_state","value","forEach","battery","voltage","id","severity","setTimeout","startDataDemo","setInterval","parseFloat","Math","random","toFixed","amps","motors","motor","pwm","floor","servos","servo","console","log","currentPower","getDateTime","currentDate","Date","months","time_period","getHours","month","getMonth","day","getDate","year","getFullYear","hours","minutes","getMinutes","dialogOptions","clearCharts","title","buttons","button_functions","bind","textArea","textAreaFunctionIndex","textAreaMessage","saveCharts","dialog_active","toggleDialog","dialog_request","dialog","dialog_content","dialog_content_object","style","display","innerHTML","dialog_title","createElement","innerText","dialog_message","dialog_text_area","dialog_buttons","classList","add","closingButton","onclick","appendChild","i","length","newButton","dialogFunctions","newFunction","userChartComment","chartsHTML","chartDivs","querySelectorAll","div","outerHTML","logHTML","pText","date","htmlContent","htmlBlob","Blob","type","download_link","href","URL","createObjectURL","download","click","__exports__","notifications","batteryBorderColor","emits","batteryVChart","charts","battery_voltage_chart","batteryAChart","battery_amp_chart","motorChart","motor_chart","servoChart","servo_chart","chart_colors","color","initCharts","drawCharts","chartSelections","computedSize","window","getComputedStyle","chart","chartData","google","visualization","DataTable","column_count","addColumn","y_title","subject","chartOptions","backgroundColor","titleTextStyle","legend","textStyle","position","hAxis","x_title","baselineColor","gridLines","vAxis","minValue","maxValue","y_max","width","parseInt","getPropertyValue","height","chartArea","left","right","explorer","actions","axis","keepInBounds","maxZoomIn","series","AreaChart","container_id","draw","events","addListener","JSON","parse","stringify","selectedItem","getSelection","selectionBool","columnIndex","column","getNumberOfColumns","handleClear","handleSave","load","setOnLoadCallback","logs","highlight_message","message_container","container","contains","remove","logIndex","substring","routes","path","name","component","streamView","dataView","logView","router","history","chartIteration","unit_reference","reference_unit","selection_bool","mutations","powerState","push","log_dateTime","complete_message","shift","newNotification","addChartData","chartArray","batteryVoltages","batteryAmps","motorPWM","servoPWM","addRow","clearChartData","batteryVoltageChart","batteryAmpsChart","newLog","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}