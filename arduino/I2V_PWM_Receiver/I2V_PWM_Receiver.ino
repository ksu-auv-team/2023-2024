#include <Wire.h>

// 9600 - 115200

#define BAUD 9600

#define PWM_CNT         6
#define SUBSYSTEM_CNT   4
//#define CONTROLER_1_CNT 4
//#define CONTROLER_2_CNT 2

#define MASTER_ADDRESS  4
#define PWM_ADDRESS     8
#define SENSOR_ADDRESS  16

#define KILL_SWITCH     0b10000000
#define PWM_ENABLE      0b00000001
#define SENSOR_ENABLE   0b00000010
#define SENSOR_FETCH    0b00100000

// Range from 0-255 (can add more if needed)
//byte[] PWM_DATA = {0, 16, 32, 64, 128, 255};
//byte CONTROL_FLAGS = PWM_ENABLE | SENSOR_ENABLE;

void setup() {
  Wire.begin(PWM_ADDRESS);    // Join line
  Wire.onRequest(onRequest);  // Link handlers
  Wire.onReceive(onReceive);
  Serial.begin(BAUD);         // Set serial BAUD
}

void loop() {}

// MAX 20 DIGITS
char* itos(int num) {
  char *str; 		//str is a pointer variable; it will hold numerical value returned by function
  char data[20]; //this array will hold the ASCII codes generated by the function
  char *ptr; //ptr is pointer variable; it points myData[] array and holds its base address
  int x = &data;
  ptr = x; //now the pointer variable ptr holds the base address of myData[] array
  //Serial.println(x, HEX); // shows base address in numerical form of myData[] array

  str = itoa(num, ptr, 10); //or str = itoa(0x6B7C, myData, 10); or itoa(0x6B7C, myData, 10);
  
  //Serial.println(data); 			//shows: 27516

  return str;
}

void onReceive(int bytes) {
  Serial.write("RECIEVER {");
  Serial.write(itos(bytes));
  Serial.write("} BYTES");

  byte flag = Wire.read(); // Enable / Disable flag
  
  while (Wire.available()) {
    byte c = Wire.read();
    
    Serial.write(", [");
    Serial.write(itos(c));
    Serial.write("]");
    // Send out PWM signels over serial to connected motors, enable/disable depending on given flag
  }
  Serial.write("\n");
}

void onRequest() {}